{
  "compare" : null,
  "previous_successful_build" : {
    "build_num" : 9555,
    "status" : "success",
    "build_time_millis" : 319741
  },
  "build_parameters" : { },
  "oss" : true,
  "all_commit_details_truncated" : false,
  "committer_date" : "2022-08-15T08:54:44.000Z",
  "steps" : [ {
    "name" : "Spin up environment",
    "actions" : [ {
      "truncated" : false,
      "index" : 0,
      "parallel" : true,
      "failed" : null,
      "infrastructure_fail" : null,
      "name" : "Spin up environment",
      "bash_command" : null,
      "status" : "success",
      "timedout" : null,
      "continue" : null,
      "end_time" : "2022-08-15T08:54:55.609Z",
      "type" : "test",
      "allocation_id" : "62fa09d914e69f7fae7394e0-0-build/16BF0160",
      "output_url" : "https://circle-production-action-output.s3.amazonaws.com/1",
      "start_time" : "2022-08-15T08:54:52.112Z",
      "background" : false,
      "exit_code" : null,
      "insignificant" : false,
      "canceled" : null,
      "step" : 0,
      "run_time_millis" : 3497,
      "has_output" : true
    } ]
  }, {
    "name" : "Container postgres:10.1-alpine",
    "actions" : [ {
      "truncated" : false,
      "index" : 0,
      "parallel" : true,
      "failed" : null,
      "infrastructure_fail" : null,
      "name" : "Container postgres:10.1-alpine",
      "bash_command" : null,
      "status" : "canceled",
      "timedout" : null,
      "continue" : null,
      "end_time" : "2022-08-15T08:57:09.756Z",
      "type" : "test",
      "allocation_id" : "62fa09d914e69f7fae7394e0-0-build/16BF0160",
      "output_url" : "https://circle-production-action-output.s3.amazonaws.com/2",
      "start_time" : "2022-08-15T08:54:55.605Z",
      "background" : true,
      "exit_code" : null,
      "insignificant" : true,
      "canceled" : true,
      "step" : 1,
      "run_time_millis" : 134151,
      "has_output" : true
    } ]
  }, {
    "name" : "bundle exec appraisal rails70 rspec",
    "actions" : [ {
      "truncated" : false,
      "index" : 0,
      "parallel" : true,
      "failed" : null,
      "infrastructure_fail" : null,
      "name" : "bundle exec appraisal rails70 rspec",
      "bash_command" : "#!/bin/bash -eo pipefail\nbundle exec appraisal rails70 rspec",
      "status" : "success",
      "timedout" : null,
      "continue" : null,
      "end_time" : "2022-08-15T08:57:09.393Z",
      "type" : "test",
      "allocation_id" : "62fa09d914e69f7fae7394e0-0-build/16BF0160",
      "output_url" : "https://circle-production-action-output.s3.amazonaws.com/3",
      "start_time" : "2022-08-15T08:56:40.041Z",
      "background" : false,
      "exit_code" : 0,
      "insignificant" : false,
      "canceled" : null,
      "step" : 115,
      "run_time_millis" : 29352,
      "has_output" : true
    } ]
  } ],
  "body" : "this fixes an issue where the embedded collection is using the parent's class to define i18n headers",
  "usage_queued_at" : "2022-08-15T08:54:49.878Z",
  "context_ids" : [ ],
  "fail_reason" : null,
  "retry_of" : null,
  "reponame" : "administrate",
  "ssh_users" : [ ],
  "build_url" : "https://circleci.com/gh/thoughtbot/administrate/9557",
  "parallel" : 1,
  "failed" : false,
  "branch" : "main",
  "username" : "thoughtbot",
  "author_date" : "2022-08-15T08:54:44.000Z",
  "why" : "github",
  "user" : {
    "is_user" : true,
    "login" : "pablobm",
    "avatar_url" : "https://avatars.githubusercontent.com/u/36066?v=4",
    "name" : "Pablo Brasero",
    "vcs_type" : "github",
    "id" : 36066
  },
  "vcs_revision" : "d5acc101fcb0ac3b18ed670771fe3627d3975974",
  "workflows" : {
    "job_name" : "ruby-31",
    "job_id" : "4739d1c4-c1cb-4060-922a-0590c316b12a",
    "workflow_id" : "927bd531-a3e2-417e-8780-59cbd7f097ed",
    "workspace_id" : "927bd531-a3e2-417e-8780-59cbd7f097ed",
    "upstream_job_ids" : [ ],
    "upstream_concurrency_map" : { },
    "workflow_name" : "multiple-rubies"
  },
  "owners" : [ "pablobm" ],
  "vcs_tag" : null,
  "pull_requests" : [ ],
  "build_num" : 9557,
  "infrastructure_fail" : false,
  "committer_email" : "36066+pablobm@users.noreply.github.com",
  "has_artifacts" : true,
  "previous" : {
    "build_num" : 9556,
    "status" : "success",
    "build_time_millis" : 562210
  },
  "status" : "success",
  "committer_name" : "Pablo Brasero",
  "retries" : null,
  "subject" : "pass associated_class to collection from show",
  "vcs_type" : "github",
  "timedout" : false,
  "dont_build" : null,
  "lifecycle" : "finished",
  "stop_time" : "2022-08-15T08:57:09.486Z",
  "ssh_disabled" : true,
  "build_time_millis" : 137638,
  "picard" : {
    "executor" : "docker",
    "resource_class" : {
      "class" : "medium",
      "name" : "Medium",
      "cpu" : 2,
      "ram" : 4096
    }
  },
  "circle_yml" : {
    "string" : "# Orb 'circleci/browser-tools@1.2.4' resolved to 'circleci/browser-tools@1.2.4'\nversion: 2\njobs:\n  ruby-31:\n    working_directory: ~/administrate\n    steps:\n    - run:\n        command: |\n          if [[ $EUID == 0 ]]; then export SUDO=\"\"; else export SUDO=\"sudo\"; fi\n\n          CHROME_VERSION=latest\n          # installation check\n          if uname -a | grep Darwin > /dev/null 2>&1; then\n            if ls /Applications | grep \"Google Chrome\" > /dev/null 2>&1; then\n\n              echo \"$(/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --version)is already installed\"\n\n              exit 0\n            else\n              echo \"Google Chrome is not currently installed; installing it\"\n            fi\n          elif cat /etc/issue | grep Alpine > /dev/null 2>&1; then\n            if command -v chromium-browser > /dev/null 2>&1; then\n\n              echo \"$(chromium-browser --version)is already installed to $(which chromium-browser)\"\n\n              exit 0\n\n            else\n              echo \"Google Chrome (via Chromium) is not currently installed; installing it\"\n            fi\n          elif command -v yum > /dev/null 2>&1; then\n            if command -v google-chrome > /dev/null 2>&1; then\n              echo \"$(google-chrome --version)is already installed to $(which google-chrome)\"\n\n              exit 0\n            else\n              echo \"Google Chrome is not currently installed; installing it\"\n            fi\n          else\n            if command -v google-chrome > /dev/null 2>&1; then\n\n              echo \"$(google-chrome --version)is already installed to $(which google-chrome)\"\n\n              exit 0\n            else\n              echo \"Google Chrome is not currently installed; installing it\"\n            fi\n          fi\n\n          # install chrome\n          if uname -a | grep Darwin > /dev/null 2>&1; then\n            brew update > /dev/null 2>&1 && \\\n              HOMEBREW_NO_AUTO_UPDATE=1 brew install google-chrome > /dev/null 2>&1\n\n            echo -e \"#\\!/bin/bash\\n\" > google-chrome\n            perl -i -pe \"s|#\\\\\\|#|g\" google-chrome\n            echo -e \"/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome \\\"\\$@\\\"\" >> google-chrome\n\n            $SUDO mv google-chrome /usr/local/bin\n            $SUDO chmod +x /usr/local/bin/google-chrome\n\n            # test/verify installation\n            if google-chrome --version > /dev/null 2>&1; then\n              echo \"$(google-chrome --version)has been installed in the /Applications directory\"\n              echo \"A shortcut has also been created at $(which google-chrome)\"\n              exit 0\n            else\n              echo \"Something went wrong; Google Chrome could not be installed\"\n              exit 1\n            fi\n          elif command -v yum > /dev/null 2>&1; then\n            # download chrome\n            if [[ \"$CHROME_VERSION\" == \"latest\" ]]; then\n              CHROME_URL=\"https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm\"\n            else\n              CHROME_URL=\"https://dl.google.com/linux/chrome/rpm/stable/x86_64/google-chrome-stable-$CHROME_VERSION-1.x86_64.rpm\"\n            fi\n\n            curl --silent --show-error --location --fail --retry 3 \\\n              --output google-chrome.rpm \\\n              $CHROME_URL\n            curl --silent --show-error --location --fail --retry 3 \\\n              --output liberation-fonts.rpm \\\n              http://mirror.centos.org/centos/7/os/x86_64/Packages/liberation-fonts-1.07.2-16.el7.noarch.rpm\n\n            $SUDO yum localinstall -y liberation-fonts.rpm \\\n              > /dev/null 2>&1\n\n            $SUDO yum localinstall -y google-chrome.rpm \\\n              > /dev/null 2>&1\n\n            rm -rf google-chrome.rpm liberation-fonts.rpm\n          else\n            # download chrome\n            if [[ \"$CHROME_VERSION\" == \"latest\" ]]; then\n              CHROME_URL=\"https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\"\n            else\n              CHROME_URL=\"https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${CHROME_VERSION}-1_amd64.deb\"\n            fi\n            curl --silent --show-error --location --fail --retry 3 \\\n              --output google-chrome.deb $CHROME_URL\n\n            # Debian 10 fix\n            if grep -i buster /etc/os-release;then\n              $SUDO apt-get --allow-releaseinfo-change-suite update\n            fi\n\n            # Ensure that Chrome apt dependencies are installed.\n            #$SUDO apt-get update\n\n            # The pipe will install any dependencies missing\n            $SUDO dpkg -i google-chrome.deb || $SUDO apt-get update && $SUDO apt-get -fy install\n            rm -rf google-chrome.deb\n            $SUDO sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \"/opt/google/chrome/google-chrome\"\n          fi\n\n          # test/verify installation\n          if [[ \"$CHROME_VERSION\" != \"latest\" ]]; then\n            if google-chrome --version | grep \"$CHROME_VERSION\" > /dev/null 2>&1; then\n              :\n            else\n              echo \"Something went wrong; Google Chrome could not be installed\"\n              exit 1\n            fi\n          else\n            if google-chrome --version  > /dev/null 2>&1; then\n              :\n            else\n              echo \"Something went wrong; Google Chrome could not be installed\"\n              exit 1\n            fi\n            echo \"$(google-chrome --version) has been installed to $(which google-chrome)\"\n            echo \"Chrome: $CHROME_VERSION\" >> ${HOME}/.browser-versions\n          fi\n        name: Install Google Chrome\n    - run:\n        command: |\n          if [[ $EUID == 0 ]]; then export SUDO=\"\"; else export SUDO=\"sudo\"; fi\n          # determine_chrome_version\n          if uname -a | grep Darwin> /dev/null 2>&1; then\n            echo \"System detected as MacOS\"\n            CHROME_VERSION=\"$(/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --version)\"\n            PLATFORM=mac64\n\n          elif cat /etc/issue | grep Alpine > /dev/null 2>&1; then\n            apk update > /dev/null 2>&1 && \\\n              apk add --no-cache chromium-chromedriver > /dev/null\n\n            # verify version\n            echo \"$(chromedriver --version) has been installed to $(which chromedriver)\"\n\n            exit 0\n          else\n            CHROME_VERSION=\"$(google-chrome --version)\"\n            PLATFORM=linux64\n          fi\n\n          CHROME_VERSION_STRING=\"$(echo $CHROME_VERSION | sed 's/.*Google Chrome //' | sed 's/.*Chromium //')\"\n\n          # print Chrome version\n          echo \"Installed version of Google Chrome is $CHROME_VERSION_STRING\"\n\n          # determine chromedriver release\n          CHROMEDRIVER_RELEASE=\"${CHROME_VERSION_STRING%%.*}\"\n\n          let CHROME_RELEASE=$CHROMEDRIVER_RELEASE\n\n          if [[ $CHROME_RELEASE -lt 70 ]]; then\n            # https://sites.google.com/a/chromium.org/chromedriver/downloads\n            # https://chromedriver.storage.googleapis.com/2.40/notes.txt\n\n            case $CHROME_RELEASE in\n            69)\n              CHROMEDRIVER_VERSION=\"2.44\";;\n            68)\n              CHROMEDRIVER_VERSION=\"2.42\";;\n            67)\n              CHROMEDRIVER_VERSION=\"2.41\";;\n            66)\n              CHROMEDRIVER_VERSION=\"2.40\";;\n            65)\n              CHROMEDRIVER_VERSION=\"2.38\";;\n            64)\n              CHROMEDRIVER_VERSION=\"2.37\";;\n            63)\n              CHROMEDRIVER_VERSION=\"2.36\";;\n            62)\n              CHROMEDRIVER_VERSION=\"2.35\";;\n            61)\n              CHROMEDRIVER_VERSION=\"2.34\";;\n            60)\n              CHROMEDRIVER_VERSION=\"2.33\";;\n            59)\n              CHROMEDRIVER_VERSION=\"2.32\";;\n            58)\n              CHROMEDRIVER_VERSION=\"2.31\";;\n            [56-57])\n              CHROMEDRIVER_VERSION=\"2.29\";;\n            55)\n              CHROMEDRIVER_VERSION=\"2.28\";;\n            54)\n              CHROMEDRIVER_VERSION=\"2.27\";;\n            53)\n              CHROMEDRIVER_VERSION=\"2.26\";;\n            52)\n              CHROMEDRIVER_VERSION=\"2.24\";;\n            51)\n              CHROMEDRIVER_VERSION=\"2.23\";;\n            [49-50])\n              CHROMEDRIVER_VERSION=\"2.22\";;\n            [46-48])\n              CHROMEDRIVER_VERSION=\"2.21\";;\n            [43-45])\n              CHROMEDRIVER_VERSION=\"2.20\";;\n            *)\n              echo \"Sorry, Google Chrome/Chromium version 43 or newer is required to use ChromeDriver\"\n              exit 1;;\n            esac\n          else\n            CHROMEDRIVER_VERSION=$(curl --silent --show-error --location --fail --retry 3 \\\n              \"https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROMEDRIVER_RELEASE\")\n          fi\n\n          # installation check\n          if command -v chromedriver > /dev/null 2>&1; then\n            if chromedriver --version | grep \"$CHROMEDRIVER_VERSION\" > /dev/null 2>&1; then\n              echo \"ChromeDriver $CHROMEDRIVER_VERSION is already installed\"\n              exit 0\n            else\n              echo \"A different version of ChromeDriver is installed ($(chromedriver --version)); removing it\"\n              $SUDO rm -f $(command -v chromedriver)\n            fi\n          fi\n\n          echo \"ChromeDriver $CHROMEDRIVER_VERSION will be installed\"\n\n          # download chromedriver\n          curl --silent --show-error --location --fail --retry 3 \\\n            --output chromedriver_$PLATFORM.zip \\\n            \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_$PLATFORM.zip\"\n\n          # setup chromedriver installation\n          if command -v yum > /dev/null 2>&1; then\n            yum install -y unzip > /dev/null 2>&1\n          fi\n\n          unzip \"chromedriver_$PLATFORM.zip\" > /dev/null 2>&1\n          rm -rf \"chromedriver_$PLATFORM.zip\"\n\n          $SUDO mv chromedriver /usr/local/bin\n          $SUDO chmod +x /usr/local/bin/chromedriver\n\n          # test/verify version\n          if chromedriver --version | grep \"$CHROMEDRIVER_VERSION\" > /dev/null 2>&1; then\n            echo \"$(chromedriver --version) has been installed to $(which chromedriver)\"\n          else\n            echo \"Something went wrong; ChromeDriver could not be installed\"\n            exit 1\n          fi\n        name: Install ChromeDriver\n    - checkout\n    - run:\n        command: gem install bundler:2.3.5\n    - restore_cache:\n        name: Restore bundle cache\n        key: administrate-{{ checksum \"Gemfile.lock\" }}\n    - run:\n        command: bundle install --path vendor/bundle\n    - save_cache:\n        name: Store bundle cache\n        key: administrate-{{ checksum \"Gemfile.lock\" }}\n        paths:\n        - vendor/bundle\n    - run:\n        command: dockerize -wait tcp://localhost:5432 -timeout 1m\n    - run:\n        command: cp .sample.env .env\n    - run:\n        command: cp spec/example_app/config/database.yml.sample spec/example_app/config/database.yml\n    - run:\n        command: bundle exec rake db:setup\n    - run:\n        command: bundle exec rspec\n    - run:\n        command: bundle exec appraisal install\n    - run:\n        command: bundle exec appraisal rails61 rspec\n    - run:\n        command: bundle exec appraisal rails70 rspec\n    docker:\n    - image: cimg/ruby:3.1-browsers\n      environment:\n        PGHOST: localhost\n        PGUSER: administrate\n        RAILS_ENV: test\n    - image: postgres:10.1-alpine\n      environment:\n        POSTGRES_USER: administrate\n        POSTGRES_DB: ruby31\n        POSTGRES_PASSWORD: ''\n  ruby-30:\n    working_directory: ~/administrate\n    steps:\n    - run:\n        command: |\n          if [[ $EUID == 0 ]]; then export SUDO=\"\"; else export SUDO=\"sudo\"; fi\n\n          CHROME_VERSION=latest\n          # installation check\n          if uname -a | grep Darwin > /dev/null 2>&1; then\n            if ls /Applications | grep \"Google Chrome\" > /dev/null 2>&1; then\n\n              echo \"$(/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --version)is already installed\"\n\n              exit 0\n            else\n              echo \"Google Chrome is not currently installed; installing it\"\n            fi\n          elif cat /etc/issue | grep Alpine > /dev/null 2>&1; then\n            if command -v chromium-browser > /dev/null 2>&1; then\n\n              echo \"$(chromium-browser --version)is already installed to $(which chromium-browser)\"\n\n              exit 0\n\n            else\n              echo \"Google Chrome (via Chromium) is not currently installed; installing it\"\n            fi\n          elif command -v yum > /dev/null 2>&1; then\n            if command -v google-chrome > /dev/null 2>&1; then\n              echo \"$(google-chrome --version)is already installed to $(which google-chrome)\"\n\n              exit 0\n            else\n              echo \"Google Chrome is not currently installed; installing it\"\n            fi\n          else\n            if command -v google-chrome > /dev/null 2>&1; then\n\n              echo \"$(google-chrome --version)is already installed to $(which google-chrome)\"\n\n              exit 0\n            else\n              echo \"Google Chrome is not currently installed; installing it\"\n            fi\n          fi\n\n          # install chrome\n          if uname -a | grep Darwin > /dev/null 2>&1; then\n            brew update > /dev/null 2>&1 && \\\n              HOMEBREW_NO_AUTO_UPDATE=1 brew install google-chrome > /dev/null 2>&1\n\n            echo -e \"#\\!/bin/bash\\n\" > google-chrome\n            perl -i -pe \"s|#\\\\\\|#|g\" google-chrome\n            echo -e \"/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome \\\"\\$@\\\"\" >> google-chrome\n\n            $SUDO mv google-chrome /usr/local/bin\n            $SUDO chmod +x /usr/local/bin/google-chrome\n\n            # test/verify installation\n            if google-chrome --version > /dev/null 2>&1; then\n              echo \"$(google-chrome --version)has been installed in the /Applications directory\"\n              echo \"A shortcut has also been created at $(which google-chrome)\"\n              exit 0\n            else\n              echo \"Something went wrong; Google Chrome could not be installed\"\n              exit 1\n            fi\n          elif command -v yum > /dev/null 2>&1; then\n            # download chrome\n            if [[ \"$CHROME_VERSION\" == \"latest\" ]]; then\n              CHROME_URL=\"https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm\"\n            else\n              CHROME_URL=\"https://dl.google.com/linux/chrome/rpm/stable/x86_64/google-chrome-stable-$CHROME_VERSION-1.x86_64.rpm\"\n            fi\n\n            curl --silent --show-error --location --fail --retry 3 \\\n              --output google-chrome.rpm \\\n              $CHROME_URL\n            curl --silent --show-error --location --fail --retry 3 \\\n              --output liberation-fonts.rpm \\\n              http://mirror.centos.org/centos/7/os/x86_64/Packages/liberation-fonts-1.07.2-16.el7.noarch.rpm\n\n            $SUDO yum localinstall -y liberation-fonts.rpm \\\n              > /dev/null 2>&1\n\n            $SUDO yum localinstall -y google-chrome.rpm \\\n              > /dev/null 2>&1\n\n            rm -rf google-chrome.rpm liberation-fonts.rpm\n          else\n            # download chrome\n            if [[ \"$CHROME_VERSION\" == \"latest\" ]]; then\n              CHROME_URL=\"https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\"\n            else\n              CHROME_URL=\"https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${CHROME_VERSION}-1_amd64.deb\"\n            fi\n            curl --silent --show-error --location --fail --retry 3 \\\n              --output google-chrome.deb $CHROME_URL\n\n            # Debian 10 fix\n            if grep -i buster /etc/os-release;then\n              $SUDO apt-get --allow-releaseinfo-change-suite update\n            fi\n\n            # Ensure that Chrome apt dependencies are installed.\n            #$SUDO apt-get update\n\n            # The pipe will install any dependencies missing\n            $SUDO dpkg -i google-chrome.deb || $SUDO apt-get update && $SUDO apt-get -fy install\n            rm -rf google-chrome.deb\n            $SUDO sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \"/opt/google/chrome/google-chrome\"\n          fi\n\n          # test/verify installation\n          if [[ \"$CHROME_VERSION\" != \"latest\" ]]; then\n            if google-chrome --version | grep \"$CHROME_VERSION\" > /dev/null 2>&1; then\n              :\n            else\n              echo \"Something went wrong; Google Chrome could not be installed\"\n              exit 1\n            fi\n          else\n            if google-chrome --version  > /dev/null 2>&1; then\n              :\n            else\n              echo \"Something went wrong; Google Chrome could not be installed\"\n              exit 1\n            fi\n            echo \"$(google-chrome --version) has been installed to $(which google-chrome)\"\n            echo \"Chrome: $CHROME_VERSION\" >> ${HOME}/.browser-versions\n          fi\n        name: Install Google Chrome\n    - run:\n        command: |\n          if [[ $EUID == 0 ]]; then export SUDO=\"\"; else export SUDO=\"sudo\"; fi\n          # determine_chrome_version\n          if uname -a | grep Darwin> /dev/null 2>&1; then\n            echo \"System detected as MacOS\"\n            CHROME_VERSION=\"$(/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --version)\"\n            PLATFORM=mac64\n\n          elif cat /etc/issue | grep Alpine > /dev/null 2>&1; then\n            apk update > /dev/null 2>&1 && \\\n              apk add --no-cache chromium-chromedriver > /dev/null\n\n            # verify version\n            echo \"$(chromedriver --version) has been installed to $(which chromedriver)\"\n\n            exit 0\n          else\n            CHROME_VERSION=\"$(google-chrome --version)\"\n            PLATFORM=linux64\n          fi\n\n          CHROME_VERSION_STRING=\"$(echo $CHROME_VERSION | sed 's/.*Google Chrome //' | sed 's/.*Chromium //')\"\n\n          # print Chrome version\n          echo \"Installed version of Google Chrome is $CHROME_VERSION_STRING\"\n\n          # determine chromedriver release\n          CHROMEDRIVER_RELEASE=\"${CHROME_VERSION_STRING%%.*}\"\n\n          let CHROME_RELEASE=$CHROMEDRIVER_RELEASE\n\n          if [[ $CHROME_RELEASE -lt 70 ]]; then\n            # https://sites.google.com/a/chromium.org/chromedriver/downloads\n            # https://chromedriver.storage.googleapis.com/2.40/notes.txt\n\n            case $CHROME_RELEASE in\n            69)\n              CHROMEDRIVER_VERSION=\"2.44\";;\n            68)\n              CHROMEDRIVER_VERSION=\"2.42\";;\n            67)\n              CHROMEDRIVER_VERSION=\"2.41\";;\n            66)\n              CHROMEDRIVER_VERSION=\"2.40\";;\n            65)\n              CHROMEDRIVER_VERSION=\"2.38\";;\n            64)\n              CHROMEDRIVER_VERSION=\"2.37\";;\n            63)\n              CHROMEDRIVER_VERSION=\"2.36\";;\n            62)\n              CHROMEDRIVER_VERSION=\"2.35\";;\n            61)\n              CHROMEDRIVER_VERSION=\"2.34\";;\n            60)\n              CHROMEDRIVER_VERSION=\"2.33\";;\n            59)\n              CHROMEDRIVER_VERSION=\"2.32\";;\n            58)\n              CHROMEDRIVER_VERSION=\"2.31\";;\n            [56-57])\n              CHROMEDRIVER_VERSION=\"2.29\";;\n            55)\n              CHROMEDRIVER_VERSION=\"2.28\";;\n            54)\n              CHROMEDRIVER_VERSION=\"2.27\";;\n            53)\n              CHROMEDRIVER_VERSION=\"2.26\";;\n            52)\n              CHROMEDRIVER_VERSION=\"2.24\";;\n            51)\n              CHROMEDRIVER_VERSION=\"2.23\";;\n            [49-50])\n              CHROMEDRIVER_VERSION=\"2.22\";;\n            [46-48])\n              CHROMEDRIVER_VERSION=\"2.21\";;\n            [43-45])\n              CHROMEDRIVER_VERSION=\"2.20\";;\n            *)\n              echo \"Sorry, Google Chrome/Chromium version 43 or newer is required to use ChromeDriver\"\n              exit 1;;\n            esac\n          else\n            CHROMEDRIVER_VERSION=$(curl --silent --show-error --location --fail --retry 3 \\\n              \"https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROMEDRIVER_RELEASE\")\n          fi\n\n          # installation check\n          if command -v chromedriver > /dev/null 2>&1; then\n            if chromedriver --version | grep \"$CHROMEDRIVER_VERSION\" > /dev/null 2>&1; then\n              echo \"ChromeDriver $CHROMEDRIVER_VERSION is already installed\"\n              exit 0\n            else\n              echo \"A different version of ChromeDriver is installed ($(chromedriver --version)); removing it\"\n              $SUDO rm -f $(command -v chromedriver)\n            fi\n          fi\n\n          echo \"ChromeDriver $CHROMEDRIVER_VERSION will be installed\"\n\n          # download chromedriver\n          curl --silent --show-error --location --fail --retry 3 \\\n            --output chromedriver_$PLATFORM.zip \\\n            \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_$PLATFORM.zip\"\n\n          # setup chromedriver installation\n          if command -v yum > /dev/null 2>&1; then\n            yum install -y unzip > /dev/null 2>&1\n          fi\n\n          unzip \"chromedriver_$PLATFORM.zip\" > /dev/null 2>&1\n          rm -rf \"chromedriver_$PLATFORM.zip\"\n\n          $SUDO mv chromedriver /usr/local/bin\n          $SUDO chmod +x /usr/local/bin/chromedriver\n\n          # test/verify version\n          if chromedriver --version | grep \"$CHROMEDRIVER_VERSION\" > /dev/null 2>&1; then\n            echo \"$(chromedriver --version) has been installed to $(which chromedriver)\"\n          else\n            echo \"Something went wrong; ChromeDriver could not be installed\"\n            exit 1\n          fi\n        name: Install ChromeDriver\n    - checkout\n    - run:\n        command: gem install bundler:2.3.5\n    - restore_cache:\n        name: Restore bundle cache\n        key: administrate-{{ checksum \"Gemfile.lock\" }}\n    - run:\n        command: bundle install --path vendor/bundle\n    - save_cache:\n        name: Store bundle cache\n        key: administrate-{{ checksum \"Gemfile.lock\" }}\n        paths:\n        - vendor/bundle\n    - run:\n        command: dockerize -wait tcp://localhost:5432 -timeout 1m\n    - run:\n        command: cp .sample.env .env\n    - run:\n        command: cp spec/example_app/config/database.yml.sample spec/example_app/config/database.yml\n    - run:\n        command: bundle exec rake db:setup\n    - run:\n        command: bundle exec rspec\n    - run:\n        command: bundle exec appraisal install\n    - run:\n        command: bundle exec appraisal rails60 rspec\n    - run:\n        command: bundle exec appraisal rails61 rspec\n    - run:\n        command: bundle exec appraisal rails70 rspec\n    docker:\n    - image: circleci/ruby:3.0\n      environment:\n        PGHOST: localhost\n        PGUSER: administrate\n        RAILS_ENV: test\n    - image: postgres:10.1-alpine\n      environment:\n        POSTGRES_USER: administrate\n        POSTGRES_DB: ruby30\n        POSTGRES_PASSWORD: ''\n  ruby-27:\n    working_directory: ~/administrate\n    steps:\n    - run:\n        command: |\n          if [[ $EUID == 0 ]]; then export SUDO=\"\"; else export SUDO=\"sudo\"; fi\n\n          CHROME_VERSION=latest\n          # installation check\n          if uname -a | grep Darwin > /dev/null 2>&1; then\n            if ls /Applications | grep \"Google Chrome\" > /dev/null 2>&1; then\n\n              echo \"$(/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --version)is already installed\"\n\n              exit 0\n            else\n              echo \"Google Chrome is not currently installed; installing it\"\n            fi\n          elif cat /etc/issue | grep Alpine > /dev/null 2>&1; then\n            if command -v chromium-browser > /dev/null 2>&1; then\n\n              echo \"$(chromium-browser --version)is already installed to $(which chromium-browser)\"\n\n              exit 0\n\n            else\n              echo \"Google Chrome (via Chromium) is not currently installed; installing it\"\n            fi\n          elif command -v yum > /dev/null 2>&1; then\n            if command -v google-chrome > /dev/null 2>&1; then\n              echo \"$(google-chrome --version)is already installed to $(which google-chrome)\"\n\n              exit 0\n            else\n              echo \"Google Chrome is not currently installed; installing it\"\n            fi\n          else\n            if command -v google-chrome > /dev/null 2>&1; then\n\n              echo \"$(google-chrome --version)is already installed to $(which google-chrome)\"\n\n              exit 0\n            else\n              echo \"Google Chrome is not currently installed; installing it\"\n            fi\n          fi\n\n          # install chrome\n          if uname -a | grep Darwin > /dev/null 2>&1; then\n            brew update > /dev/null 2>&1 && \\\n              HOMEBREW_NO_AUTO_UPDATE=1 brew install google-chrome > /dev/null 2>&1\n\n            echo -e \"#\\!/bin/bash\\n\" > google-chrome\n            perl -i -pe \"s|#\\\\\\|#|g\" google-chrome\n            echo -e \"/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome \\\"\\$@\\\"\" >> google-chrome\n\n            $SUDO mv google-chrome /usr/local/bin\n            $SUDO chmod +x /usr/local/bin/google-chrome\n\n            # test/verify installation\n            if google-chrome --version > /dev/null 2>&1; then\n              echo \"$(google-chrome --version)has been installed in the /Applications directory\"\n              echo \"A shortcut has also been created at $(which google-chrome)\"\n              exit 0\n            else\n              echo \"Something went wrong; Google Chrome could not be installed\"\n              exit 1\n            fi\n          elif command -v yum > /dev/null 2>&1; then\n            # download chrome\n            if [[ \"$CHROME_VERSION\" == \"latest\" ]]; then\n              CHROME_URL=\"https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm\"\n            else\n              CHROME_URL=\"https://dl.google.com/linux/chrome/rpm/stable/x86_64/google-chrome-stable-$CHROME_VERSION-1.x86_64.rpm\"\n            fi\n\n            curl --silent --show-error --location --fail --retry 3 \\\n              --output google-chrome.rpm \\\n              $CHROME_URL\n            curl --silent --show-error --location --fail --retry 3 \\\n              --output liberation-fonts.rpm \\\n              http://mirror.centos.org/centos/7/os/x86_64/Packages/liberation-fonts-1.07.2-16.el7.noarch.rpm\n\n            $SUDO yum localinstall -y liberation-fonts.rpm \\\n              > /dev/null 2>&1\n\n            $SUDO yum localinstall -y google-chrome.rpm \\\n              > /dev/null 2>&1\n\n            rm -rf google-chrome.rpm liberation-fonts.rpm\n          else\n            # download chrome\n            if [[ \"$CHROME_VERSION\" == \"latest\" ]]; then\n              CHROME_URL=\"https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\"\n            else\n              CHROME_URL=\"https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${CHROME_VERSION}-1_amd64.deb\"\n            fi\n            curl --silent --show-error --location --fail --retry 3 \\\n              --output google-chrome.deb $CHROME_URL\n\n            # Debian 10 fix\n            if grep -i buster /etc/os-release;then\n              $SUDO apt-get --allow-releaseinfo-change-suite update\n            fi\n\n            # Ensure that Chrome apt dependencies are installed.\n            #$SUDO apt-get update\n\n            # The pipe will install any dependencies missing\n            $SUDO dpkg -i google-chrome.deb || $SUDO apt-get update && $SUDO apt-get -fy install\n            rm -rf google-chrome.deb\n            $SUDO sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \"/opt/google/chrome/google-chrome\"\n          fi\n\n          # test/verify installation\n          if [[ \"$CHROME_VERSION\" != \"latest\" ]]; then\n            if google-chrome --version | grep \"$CHROME_VERSION\" > /dev/null 2>&1; then\n              :\n            else\n              echo \"Something went wrong; Google Chrome could not be installed\"\n              exit 1\n            fi\n          else\n            if google-chrome --version  > /dev/null 2>&1; then\n              :\n            else\n              echo \"Something went wrong; Google Chrome could not be installed\"\n              exit 1\n            fi\n            echo \"$(google-chrome --version) has been installed to $(which google-chrome)\"\n            echo \"Chrome: $CHROME_VERSION\" >> ${HOME}/.browser-versions\n          fi\n        name: Install Google Chrome\n    - run:\n        command: |\n          if [[ $EUID == 0 ]]; then export SUDO=\"\"; else export SUDO=\"sudo\"; fi\n          # determine_chrome_version\n          if uname -a | grep Darwin> /dev/null 2>&1; then\n            echo \"System detected as MacOS\"\n            CHROME_VERSION=\"$(/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --version)\"\n            PLATFORM=mac64\n\n          elif cat /etc/issue | grep Alpine > /dev/null 2>&1; then\n            apk update > /dev/null 2>&1 && \\\n              apk add --no-cache chromium-chromedriver > /dev/null\n\n            # verify version\n            echo \"$(chromedriver --version) has been installed to $(which chromedriver)\"\n\n            exit 0\n          else\n            CHROME_VERSION=\"$(google-chrome --version)\"\n            PLATFORM=linux64\n          fi\n\n          CHROME_VERSION_STRING=\"$(echo $CHROME_VERSION | sed 's/.*Google Chrome //' | sed 's/.*Chromium //')\"\n\n          # print Chrome version\n          echo \"Installed version of Google Chrome is $CHROME_VERSION_STRING\"\n\n          # determine chromedriver release\n          CHROMEDRIVER_RELEASE=\"${CHROME_VERSION_STRING%%.*}\"\n\n          let CHROME_RELEASE=$CHROMEDRIVER_RELEASE\n\n          if [[ $CHROME_RELEASE -lt 70 ]]; then\n            # https://sites.google.com/a/chromium.org/chromedriver/downloads\n            # https://chromedriver.storage.googleapis.com/2.40/notes.txt\n\n            case $CHROME_RELEASE in\n            69)\n              CHROMEDRIVER_VERSION=\"2.44\";;\n            68)\n              CHROMEDRIVER_VERSION=\"2.42\";;\n            67)\n              CHROMEDRIVER_VERSION=\"2.41\";;\n            66)\n              CHROMEDRIVER_VERSION=\"2.40\";;\n            65)\n              CHROMEDRIVER_VERSION=\"2.38\";;\n            64)\n              CHROMEDRIVER_VERSION=\"2.37\";;\n            63)\n              CHROMEDRIVER_VERSION=\"2.36\";;\n            62)\n              CHROMEDRIVER_VERSION=\"2.35\";;\n            61)\n              CHROMEDRIVER_VERSION=\"2.34\";;\n            60)\n              CHROMEDRIVER_VERSION=\"2.33\";;\n            59)\n              CHROMEDRIVER_VERSION=\"2.32\";;\n            58)\n              CHROMEDRIVER_VERSION=\"2.31\";;\n            [56-57])\n              CHROMEDRIVER_VERSION=\"2.29\";;\n            55)\n              CHROMEDRIVER_VERSION=\"2.28\";;\n            54)\n              CHROMEDRIVER_VERSION=\"2.27\";;\n            53)\n              CHROMEDRIVER_VERSION=\"2.26\";;\n            52)\n              CHROMEDRIVER_VERSION=\"2.24\";;\n            51)\n              CHROMEDRIVER_VERSION=\"2.23\";;\n            [49-50])\n              CHROMEDRIVER_VERSION=\"2.22\";;\n            [46-48])\n              CHROMEDRIVER_VERSION=\"2.21\";;\n            [43-45])\n              CHROMEDRIVER_VERSION=\"2.20\";;\n            *)\n              echo \"Sorry, Google Chrome/Chromium version 43 or newer is required to use ChromeDriver\"\n              exit 1;;\n            esac\n          else\n            CHROMEDRIVER_VERSION=$(curl --silent --show-error --location --fail --retry 3 \\\n              \"https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROMEDRIVER_RELEASE\")\n          fi\n\n          # installation check\n          if command -v chromedriver > /dev/null 2>&1; then\n            if chromedriver --version | grep \"$CHROMEDRIVER_VERSION\" > /dev/null 2>&1; then\n              echo \"ChromeDriver $CHROMEDRIVER_VERSION is already installed\"\n              exit 0\n            else\n              echo \"A different version of ChromeDriver is installed ($(chromedriver --version)); removing it\"\n              $SUDO rm -f $(command -v chromedriver)\n            fi\n          fi\n\n          echo \"ChromeDriver $CHROMEDRIVER_VERSION will be installed\"\n\n          # download chromedriver\n          curl --silent --show-error --location --fail --retry 3 \\\n            --output chromedriver_$PLATFORM.zip \\\n            \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_$PLATFORM.zip\"\n\n          # setup chromedriver installation\n          if command -v yum > /dev/null 2>&1; then\n            yum install -y unzip > /dev/null 2>&1\n          fi\n\n          unzip \"chromedriver_$PLATFORM.zip\" > /dev/null 2>&1\n          rm -rf \"chromedriver_$PLATFORM.zip\"\n\n          $SUDO mv chromedriver /usr/local/bin\n          $SUDO chmod +x /usr/local/bin/chromedriver\n\n          # test/verify version\n          if chromedriver --version | grep \"$CHROMEDRIVER_VERSION\" > /dev/null 2>&1; then\n            echo \"$(chromedriver --version) has been installed to $(which chromedriver)\"\n          else\n            echo \"Something went wrong; ChromeDriver could not be installed\"\n            exit 1\n          fi\n        name: Install ChromeDriver\n    - checkout\n    - run:\n        command: gem install bundler:2.3.5\n    - restore_cache:\n        name: Restore bundle cache\n        key: administrate-{{ checksum \"Gemfile.lock\" }}\n    - run:\n        command: bundle install --path vendor/bundle\n    - save_cache:\n        name: Store bundle cache\n        key: administrate-{{ checksum \"Gemfile.lock\" }}\n        paths:\n        - vendor/bundle\n    - run:\n        command: dockerize -wait tcp://localhost:5432 -timeout 1m\n    - run:\n        command: cp .sample.env .env\n    - run:\n        command: cp spec/example_app/config/database.yml.sample spec/example_app/config/database.yml\n    - run:\n        command: bundle exec rake db:setup\n    - run:\n        command: bundle exec rspec\n    - run:\n        command: bundle exec appraisal install\n    - run:\n        command: bundle exec appraisal rails60 rspec\n    - run:\n        command: bundle exec appraisal rails61 rspec\n    - run:\n        command: bundle exec appraisal rails70 rspec\n    docker:\n    - image: circleci/ruby:2.7\n      environment:\n        PGHOST: localhost\n        PGUSER: administrate\n        RAILS_ENV: test\n    - image: postgres:10.1-alpine\n      environment:\n        POSTGRES_USER: administrate\n        POSTGRES_DB: ruby27\n        POSTGRES_PASSWORD: ''\nworkflows:\n  version: 2\n  multiple-rubies:\n    jobs:\n    - ruby-31\n    - ruby-30\n    - ruby-27\n"
  },
  "messages" : [ ],
  "is_first_green_build" : false,
  "job_name" : null,
  "start_time" : "2022-08-15T08:54:52.029Z",
  "canceler" : null,
  "all_commit_details" : [ {
    "committer_date" : "2022-08-15T08:54:44.000Z",
    "body" : "this fixes an issue where the embedded collection is using the parent's class to define i18n headers",
    "branch" : "main",
    "author_date" : "2022-08-15T08:54:44.000Z",
    "committer_email" : "36066+pablobm@users.noreply.github.com",
    "commit" : "d5acc101fcb0ac3b18ed670771fe3627d3975974",
    "committer_login" : "pablobm",
    "committer_name" : "Pablo Brasero",
    "subject" : "pass associated_class to collection from show",
    "commit_url" : "https://github.com/thoughtbot/administrate/commit/d5acc101fcb0ac3b18ed670771fe3627d3975974",
    "author_login" : "stormmaster42",
    "author_name" : "Stefan Riss",
    "author_email" : "s.riss@klarx.com"
  } ],
  "platform" : "2.0",
  "outcome" : "success",
  "vcs_url" : "https://github.com/thoughtbot/administrate",
  "author_name" : "Stefan Riss",
  "node" : null,
  "queued_at" : "2022-08-15T08:54:50.042Z",
  "canceled" : false,
  "author_email" : "s.riss@klarx.com"
}
