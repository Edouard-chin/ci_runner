c
pp stdout
p stdout
puts stdout
stdout
c
stdout
c
stdout
sstdout
c
exit
c
`/var/folders/mf/s1_q5kjd53l8th0y862fwks80000gn/T/d20220730-33767-ls58z5/.rubies/ruby-2.7.6/bin/ruby`
env
ENV
exit
puts stderr
stderr
c
stdout
c
executable_path.dirname
pp executable_path.methods
executable_path.base
executable_path.basename
executable_path
Dir.home.base
Dir.home.basename
Dir.home
c
File.expand_path("stub_ruby.rb", "test/fixtures")
File.expand_path("stub_ruby.rb", "fixtures")
c
puts stderr
stderr
c
stdout.gsub(regex, '\1 0')
stdout.gsub(regex, '\10')
stdout.gsub(regex, '\1')
stdout.gsub(/Run/, '\1')
regex
stdout.gsub(/Run/, "b")
stdout.gsub(/a/, "b")
stdout.match(regex)
stdout.match regex
stdout.gsub(regex, 'abc')
stdout.gsub(regex, "\1")
stdout.gsub(regex, '\2')
stdout.match regex
stdout.gsub(regex, '\1')
regex = /(Finished in) \d+\.\d{6}s, \d+\.\d{4} runs\/s, \d+\.\d{4} assertions\/s\./
stdout
c
stdout
c
n
c
n
c
$?
?
n
File.read(rakefile_path)
rakefile_path
env
c
puts env
env
ls
c
stdout
stderr
exit
stdout
exit
`cat /Users/edouard/code/projects/ci_runner/test/fixtures/tests/foo_test.rb`
`cat /Users/edouard/code/projects/ci_runner/test/fixtures/test/foo_test.rb`
`cat /Users/edouard/code/projects/ci_runner/fixtures/test/foo_test.rb`
c
`cat /Users/edouard/code/projects/ci_runner/fixtures/test/foo_test.rb`
failures.first
File.expand_path("test", 'fixtures/test')
exit
File.expand_path("test", 'fixtures/test')
File.expand_path("test", 'fixtures')
File.expand_path("test", 'blo')
File.expand_path("test")
`cat /Users/edouard/code/projects/ci_runner/test/foo_test.rb`
failures.first
exit
fl.methods
fl.class
fl
c
exit
puts buffer
exit
puts buffer
buffer
c
parser.failures.map(&:test_name)
parser.failures.map(&:name)
c
logfile.to_s
logfile.path
logfile
c
out.encoding
puts out
out
c
Base64.strict_encode64("user:token")
Base64.stric_encode64("user:token")
Base64.encode64("user:token")
Base64.encode64("token")
req
c
File.expand_path("fixtures", __dir__)
File.expand_path("fixtures")
__dir__
Dir.pwd
